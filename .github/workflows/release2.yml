name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Необходимое разрешение для создания релиза

    steps:
      # Шаг 1: Проверка исходного кода
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      # Шаг 2: Установка зависимостей (например, Boost)
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libboost-test-dev cmake g++ -y

      # Шаг 3: Генерация файлов сборки с помощью CMake
      - name: Configure CMake
        run: cmake . -DCMAKE_BUILD_TYPE=Release

      # Шаг 4: Сборка проекта
      - name: Build project
        run: cmake --build .

      # Шаг 5: Запуск тестов (если у вас есть тесты)
      - name: Run tests
        run: ctest --output-on-failure

      # Шаг 6: Создание релиза на GitHub (если необходимо)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}   # Используйте номер сборки как тег
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      # Шаг 7: Загрузка артефактов релиза (например, исполняемый файл)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MyExecutable   # Убедитесь, что путь правильный к вашему исполняемому файлу!
          asset_name: MyExecutable       # Имя артефакта в релизе
          asset_content_type: application/octet-stream  # Тип контента для исполняемого файла